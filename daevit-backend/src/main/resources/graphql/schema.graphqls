type Query {
  getPostById(postId: Int): Post
  getPosts(offset: Int, count: Int): [Post]
  getBaseComments(postId: Int, offset: Int, count: Int): [Comment]
  getChildComments(parentId: Int, offset: Int, count: Int): [Comment]
}

type Mutation {
  createPost(
    title: String
    flair: String
    content: String
    author: String
  ): Post
  updatePost(postId: Int, title: String, flair: String, content: String): Post
  deletePost(postId: Int): Int
  createComment(
    postId: Int
    parentId: Int
    content: String
    author: String
  ): Comment
  updateComment(commentId: Int, content: String): Comment
  deleteComment(commentId: Int): Int
}

type Post {
  postId: ID
  title: String
  flair: String
  content: String
  createdAt: String
  updatedAt: String
  author: User
  likes: Int
  comments: Int
  shares: Int
}

type Comment {
  commentId: ID
  post: Post
  parent: Comment
  author: User
  content: String
  createdAt: String
  updatedAt: String
  likes: Int
}

type User {
  userId: ID
  authId: String!
  username: String
  email: String
  birthdate: String
  lastName: String
  firstName: String
  profileImageURL: String
  createdAt: String
  updatedAt: String
}
